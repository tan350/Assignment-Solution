{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fswiss\fcharset0 Calibri;}{\f1\fnil\fcharset0 Calibri;}{\f2\fnil Calibri;}{\f3\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\nowidctlpar\sa200\sl276\slmult1\f0\fs22\lang9 ============================\b\fs36 Assignment12\b0\fs22 ===============================\fs24\lang1033\par
\b\fs22\lang9\tab\tab\tab\tab\tab\tab Submitted By \fs36 TANUJA SHARMA\b0\fs24\lang1033\par
\fs22\lang9 ==============================================================================\fs24\lang1033\par

\pard\sa200\sl276\slmult1\b\f1\fs22\lang9 Que1= What are the different types of Testing. Explain each in 5 key points.\par
Ans1= Types of Testing are:\par
On the basis of code:\par
\b0 1.White-box testing\par
2. Black-box testing\par
\b On the basis of functionality:\par
\b0 1.Functional\par
2. Non-Functional\par
\b On the basis of tools:\par
\b0 1. Manual\par
2. Automation\b\par
1. White-box testing:\b0\par

\pard\sa200\sl276\slmult1\b (a) Unit testing:\b0\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 It's a procedure used to validate that individual units of source code are working  properly.\par
{\pntext\f3\'B7\tab}It's used to check a function, method or loop or statement in program are working fine.\par
{\pntext\f3\'B7\tab}It's usually done by programmers.\par
{\pntext\f3\'B7\tab}Tools used are Code coverage analyzer &\par
{\pntext\f3\'B7\tab}Automatic testcase generator.\par

\pard\sa200\sl276\slmult1\b (b) Structural testing:\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 It's based on the architecture of the system, such as calling hierarchy.\par
{\pntext\f3\'B7\tab}It's used to verify the functionality of a particular structure of code &\par
{\pntext\f3\'B7\tab}To ensure that every line of code has been covered during testing.\par
{\pntext\f3\'B7\tab}In this tests are exeuted to exercise the code in different layers & measure code coverage of structure.\par

\pard\sa200\sl276\slmult1\b 2. Black-box testing:\par
(a) Functional testing: \b0 It covers how well the system execute the functions , it is supposed to execute user commands, data manipulation. It is performed based on user's perspective.\par
\b (i) Smoke testing:\b0   \par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 It's surface level testing to verify that build provided by developemnt to QA is ready to accept for further testing.\par
{\pntext\f3\'B7\tab}It's also called BAT (Build Acceptance Test).\par
{\pntext\f3\'B7\tab}During Smoke testing, Blocker/Critical test cases are executed from each component of product. \par
{\pntext\f3\'B7\tab}It also covers some parts of functional testing.\par
{\pntext\f3\'B7\tab}If build  fails the smoke test, then its rejected & QA revert back to previously accepted build.\par

\pard\sa200\sl276\slmult1\b (ii) Sanity tetsting:\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 It's surface level testing where QA verifies all the menus, functions, commands available in the product are working fine.\b\par
{\pntext\f3\'B7\tab}\b0 It's done after smoke testing pass.\b\par
{\pntext\f3\'B7\tab}\b0 It's used when dev team needs to know quick state of the product.\b\par
{\pntext\f3\'B7\tab}\b0 It also helps to confirm that build generated after compilation process has not incorporated any errors causing any other area to break completely.\b\par

\pard\sa200\sl276\slmult1 (iii) Regression testing: \par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 It's in depth testing which is used to ensure that features working earlier are still working as desired.\b\par
{\pntext\f3\'B7\tab}\b0 It's performed when any new build comes to QA, which has bug fixes in it or duriing release cycles to establish stability of product.\b\par
{\pntext\f3\'B7\tab}\b0 QA team performs the fixed bugs regression to see if the bugs are really fixed in the build & fix of any bug.\b\par
{\pntext\f3\'B7\tab}\b0 Failed test cases, reported as bug.\b\par

\pard\sa200\sl276\slmult1 (b) Non-functional testing:\b0  It targets non- functional requirements which are not required by user/customer's but developers have to provide it. Non-functional testing describes tests used to measure s/w charcterstics such as response time, page load time, peak load limit.\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b Security testing\par
{\pntext\f3\'B7\tab}performance testing\par
{\pntext\f3\'B7\tab}load testing\b0\tab\b\par
{\pntext\f3\'B7\tab}Stress testing\b0\tab\b\par
{\pntext\f3\'B7\tab}Volume testing\par
{\pntext\f3\'B7\tab}Recovery testing\par
{\pntext\f3\'B7\tab}Usability testing\par
{\pntext\f3\'B7\tab}Compatibility testing\par

\pard\sa200\sl276\slmult1\par

\pard\sa200\sl276\slmult1 Que2= List five key differences Smoke Testing Vs Sanity Testing? Explain with Real life Example.\par
Ans2= Differences Smoke Testing Vs Sanity Testing:\par
Smoke Testing:\par
\b0 1. It's surface level testing to verify that build provided by developemnt to QA is ready to accept for further testing.\par
2. Smoke testing is also called subset of acceptance testing.\par
3. Smoke testing is documented.\par
4. During Smoke testing, Blocker/Critical test cases are executed from each component of product. \par
5. It's also called BAT (Build Acceptance Test).\par

\pard\sa200\sl276\slmult1\b eg= \b0 Verify application access successfully.\b\par

\pard\sa200\sl276\slmult1 Sanity testing:\par
\b0 1. It's surface level testing where QA verifies all the menus, functions, commands available in the product are working fine.\par
2. Sanity testing is also called subset of regression testing.\par
3. Sanity testing is not documented.\par
4. It's used when dev team needs to know quick state of the product.\par
5. It also helps to confirm that build generated after compilation process has not incorporated any errors causing any other area to break completely.\b\par
eg= \b0 Verify the new button added in s/w application for translate the page in different languages.\par
\b\par
Que3= Difference between alpha testing and beta Testing? \par
Ans3= The main differences b/w alpha and Beta testing are:\par
Alpha testing:\par
\b0 1. Alpha testing involves both the white box and black box testing.\par
2. Alpha testing is performed by testers who are usually internal employees of the organization.\par
3. Alpha testing is performed at the developer\rquote s site.\par
4. Alpha testing ensures the quality of the product before forwarding to beta testing.\par
5. Developers can immediately address the critical issues or fixes in alpha testing.\par
\b Beta testing:\par
\b0 1. Beta testing commonly uses black-box testing.\par
2. Beta testing is performed by clients who are not part of the organization.\par
3. Beta testing is performed at the end-user of the product.\par
4. Beta testing also concentrates on the quality of the product but collects users input on the product and ensures that the product is ready for real time users.\par
5.\b  \b0 Most of the issues or feedback collected from the beta testing will be implemented in future versions of the product.\b\par
\par
Que4= Difference between Retesting and Regression Testing? Explain with Real life Example.\par
Ans4=  The main difference b/w Retesting and Regression Testing are:\par
Retesting:\par
\b0 1. Retesting is done to make sure that the bug is fixed and whether failed functionality is working fine or not, this is a kind of verification method followed in the testing field for the fixed bugs.\par
2. Retesting is known as planned testing.\par
3. Retesting is used to ensure the test cases which failed in last execution are fixed.\par
4. Retesting is used only for failed test cases.\par
5. It takes less time as it focusses only on the exploration of a certain defect of the product.\par
\b Regression testing:\par
\b0 1. It's in depth testing which is used to ensure that features working earlier are still working as desired.\par
2. Regression testing is known as a generic testing\par
3. Regression testing is to ensure that changes have not affected the unchanged part of product.\par
4. Regression testing is used for passed test cases.\par
5.\b  \b0 It takes more time as it explores the whole application to uncover the bugs.\b\par
\par
Que5= When we can stop the testing? \par
Ans5= Factors to deciding when to stop the testinga are:\par
\b0 1.  Stop the Testing when deadlines like release deadlines or testing deadlines have reached.\par
2. Stop the Testing when the test cases have been completed with some prescribed pass percentage.\par
3. Stop the Testing when the testing budget comes to its end.\par
4. Stop the Testing when the code coverage and functionality requirements come to a desired level.\par
5.\b  \b0  Stop the Testing when the period of beta testing / alpha testing gets over.\par
\b\par
Que6= What is test plan and define its different Parameters.\par
Ans6= \b0 A test plan is a detailed document which describes software testing areas and activities. It outlines the test strategy, objectives, test schedule, required resources.\par
\b Test plan components or parameters are:\par
1.Objectives: \b0 It consists of information about modules, features, test data etc., which indicate the aim of the application means the application behavior, goal, etc.\b\par
2. Scope: \b0 It contains information that needs to be tested with respective of an application. \b\par
3. Test methodology: \b0 It contains information about performing a different kind of testing like Functional testing, Integration testing, and System testing, etc. on the application.\b\par
4. Approach: \b0 This attribute is used to describe the flow of the application while performing testing and for the future reference.\b\par
5. Role & responsibility: \b0 It defines the complete task which needs to be performed by the entire testing team. \b\par
6. Schedule: \b0 It is used to explain the timing to work, which needs to be done or this attribute covers when exactly each testing activity should start and end.\b\par
7. Defect tracking: \b0 It is generally done with the help of tools because we cannot track the status of each bug manually.\b\par
8. Test-environments: \b0 These are the environments where we will test the application, and here we have two types of environments, which are of software and hardware configuration.\b\par
9. Test automation: \b0 In this, we will decide, Which feature has to be automated and not to be automated? Which test automation tool we are going to use on which automation framework?\b\par
10. Effort estimation: \b0 In this, we will plan the effort need to be applied by every team member.\b\par
11. Test delieverable: \b0 These are the documents which are the output from the testing team, which we handed over to the customer along with the product. \par
\b\par
Que7= Latest version of difference browser?Which types of bugs find in Black Box testing?\par
Ans7= Version of different browsers are:\par

\pard 
{\pntext\f1 1.\tab}{\*\pn\pnlvlbody\pnf1\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1  Firefox 107\par
{\pntext\f1 2.\tab}Chrome 108.0\par
{\pntext\f1 3.\tab}Safari 35.0.1\par
{\pntext\f1 4.\tab}Microsoft edge 107.0\par
{\pntext\f1 5.\tab}Opera 93.0.4585.37\par

\pard\sa200\sl276\slmult1 Types of bugs found  in blaack-box testing are:\par

\pard 
{\pntext\f1 1.\tab}{\*\pn\pnlvlbody\pnf1\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Functionality related bugs\par
{\pntext\f1 2.\tab}GUI\par
{\pntext\f1 3.\tab}Validation\par
{\pntext\f1 4.\tab}Spelling mistaken\par
{\pntext\f1 5.\tab}grammatical misrtaken\par

\pard\sa200\sl276\slmult1\par
Que8= In white box testing, what do you verify?\par
Ans8= \b0 The main aim of white box testing is to verify the proper flow and functionality of the application. \par
1. Basically verify the security holes in the code.\par
2. Verify the broken or incomplete paths in the code.\par
3. Verify the flow of structure mention in the specification document\par
4. Verify the Expected outputs\par
5. Verify the all conditional loops in the code to check the complete functionality of the application.\par
6. Verify the line by line or Section by Section in the code & cover the 100% testing.\b\par
\par
Que9= What is black box testing? What are the different black box testing technique?\par
Ans9= Black box testing: \b0 Black box testing is a type of software testing in which the functionality of the software is not known. The testing is done without the internal knowledge of the products. \par
\b The black-box testing techniques are:\par
1. Equivalence partitioning (EP): \b0 Equivalence partitioning is a technique that divides test objects into partitions or classes that are treated and tested in the same way. This technique is used for testing a range of values, inputs, and outputs. There are valid and invalid equivalence partitions. Valid equivalence partitions contain only the valid values that are accepted by the testing object. In contrast, invalid equivalence partitions contain only invalid values that are rejected by the testing object. \b\par
2. Boundary value analysis (BVA): \b0 This technique is an extension of equivalence partitioning and is used to test the boundaries of the valid and invalid partitions. These boundaries are breaking points that are most likely to be incorrect. \f2 There are two types of boundary value analysis, two-value and three-value boundary analysis. In comparison, we use three-value boundary analysis to test the values before the boundary, at the boundary, and just above the boundary.\b\f1\par
3. Decision table testing: \b0 The decision table testing technique is used to visually present the different combinations of inputs and outputs and is more focused on business rules. We use decision table testing in situations where different combinations of test input conditions result in different outputs. With this technique, we identify the conditions and the resulting actions of the testing object and present them in a table.\b\par
Que10= What are the different test levels? What are verification and validation?\par
Ans10= The different Test levels are:\par
1.Unit Testing: \b0 Unit testing is the first level of software testing, which is used to test if software modules are satisfying the given requirement or not.\b\par
2.Integration Testing: \b0 The second level of software testing is the integration testing. The integration testing process comes after unit testing.\par
The primary purpose of executing the integration testing is to identify the defects at the interaction between integrated components or units.\b\par
3.System Testing: \b0 The third level of software testing is system testing, which is used to test the software's functional and non-functional requirements.\par
To check the end-to-end flow of an application or the software as a user is known as System testing.\b\par
4.Acceptance Testing: \b0 The last and fourth level of software testing is acceptance testing, which is used to evaluate whether a specification or the requirements are met as per its delivery.\par
In simple words, we can say that Acceptance testing is the squeezing of all the testing processes that are previously done. The acceptance testing is also known as User acceptance testing (UAT) and is done by the customer before accepting the final product.\par
\b Verificaton: \b0 Verification is the process of checking that a software achieves its goal without any bugs. It is the process to ensure whether the product that is developed is right or not.\par
Verification means Are we building the product right? \b\par
Validation: \b0 Validation is the process of checking whether the software product is up to the mark or in other words product has high level requirements. It is the process of checking the validation of product.\par
Validation means Are we building the right product? \par
\b\par
Que11= What is the difference between UAT (User Acceptance Testing) and System testing? \par
Ans11= The main difference b/w UAT and System testing are:\par
UAT(User Acceptance Testing) :\par
\b0 1. UA testing is the type of testing which is used to check whether the software meets the customer requirements or not.\par
2. UA testing is only functional testing.\par
3. UA testing is the constitute of alpha and beta testing.\par
4. UA Testing is the constitute of positive test cases.\par
5. In acceptance testing, system is checked for random inputs.\par
\b System testing:\par
\b0 1. System testing is done to check whether the software or product meets the specified requirements or not.\par
2. System Testing is both functional and non-functional testing.\par
3. System Testing is the constitute of System and integration testing.\par
4. System testing is the constitute of positive as well as negative test cases.\par
5. In system testing, system is checked for dummy inputs.\par
\par
\b\par
Que12= What is mutation testing?\par
Ans12= Mutation testing: \b0 Mutation Testing is a type of Software Testing that is performed to design new software tests and also evaluate the quality of already existing software tests. Mutation testing is related to modification a program in small ways. It focuses to help the tester develop effective tests or locate weaknesses in the test data used for the program. \b\par
Que13= What are the important steps that are covered in Functional testing? \par
Ans13=  The steps covered in functional testing are:\par
\b0 1.Determine which functionality of the product needs to be tested. This can vary from testing main functions, messages, error conditions and/or product usability.\par
2.Create input data for functionalities to be tested according to specified requirements.\par
3.Determine acceptable output parameters according to specified requirements.\par
4.Execute test cases.\par
5.Compare actual output from the test with the predetermined output values. This reveals if the system is working as expected.\par
\b\par
Que14= What is Automation testing? \par
Ans14= Automation testing: \b0 Automation testing is a type of testing in which we take the help of tools (automation) to perform the testing. It is faster than manual testing because it is done by some automation tools. There is no chance of any human errors.\par
The automation testing process is a systematic approach to organize and execute testing activities in a manner that provides maximum test coverage with limited no. of testcases.\par
\b\par
Que15= Explain the term Stress Testing and Load testing\par
Ans 15= Stress testing: \b0 In stress testing, testing the s/w in such extreme conditions like lack of memory. When the unrealistic  load placed on the system is raised beyond the normal usage patterns in order to test the system's response at unusually high or peak loads, it's known as Stress testing.\b\par
Load testing: \b0 Load testing is used to test that application works fine with realistic loads that result from large no. of simultaneous users, transactions to determine whether it can handle peak usage periods. It measures system ability to handle varied workloads.\par
\b Que16= How Acceptance testing is importance? Who does acceptance Testing? What we do in this testing?\par
Ans16= Importance of Acceptance Testing :\par

\pard 
{\pntext\f1 1.\tab}{\*\pn\pnlvlbody\pnf1\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1\b0 To ensure the software works in the desired manner.\par
{\pntext\f1 2.\tab}To confirm the software matches current market standards and competes with similar products in the industry.\par
{\pntext\f1 3.\tab}To gain confidence in the software that is getting pushed into production.\par

\pard\sa200\sl276\slmult1 An acceptance test is a form of software testing, performed by the customer or end-user\par

\pard\sa200\sl276\slmult1 Acceptance testing is formal testing based on user requirements and function processing. It determines whether the software is conforming specified requirements and user requirements or not. It is conducted as a kind of Black Box testing where the number of required users involved testing the acceptance level of the system.\par
\par
\b Que17= What is Random testing / ad-hoc testing? \par
Ans17=  Random testing / ad-hoc testing: \b0 Adhoc Testing is an informal or unstructured software testing type that aims to break the testing process in order to find possible defects or errors at an early possible stage. Ad hoc testing is done randomly and it is usually an unplanned activity which does not follow any documentation and test design techniques to create test cases.\b\par
Que18= What is Functional Testing? List various testing which come under this category?\par
Ans18= Functional Testing: \b0 Functional Testing is a type of software testing that validates the software system against the functional requirements/specifications. The purpose of Functional tests is to test each function of the software application, by providing appropriate input, verifying the output against the Functional requirements.\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Unit Testing\par
{\pntext\f3\'B7\tab}Smoke Testing\par
{\pntext\f3\'B7\tab}Sanity Testing\par
{\pntext\f3\'B7\tab}Integration Testing\par
{\pntext\f3\'B7\tab}White box testing\par
{\pntext\f3\'B7\tab}Black Box testing\par
{\pntext\f3\'B7\tab}User Acceptance testing\par
{\pntext\f3\'B7\tab}Regression Testing\b\par

\pard\sa200\sl276\slmult1\par

\pard\sa200\sl276\slmult1 Que19= What is Non Functional Testing? List various testing which come under this category?\par
Ans19= Non Functional Testing: \b0  It targets non- functional requirements which are not required by user/customer's but developers have to provide it. Non-functional testing describes tests used to measure s/w charcterstics such as response time, page load time, peak load limit.\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b Security testing\par
{\pntext\f3\'B7\tab}performance testing\par
{\pntext\f3\'B7\tab}load testing\b0\tab\b\par
{\pntext\f3\'B7\tab}Stress testing\b0\tab\b\par
{\pntext\f3\'B7\tab}Volume testing\par
{\pntext\f3\'B7\tab}Recovery testing\par
{\pntext\f3\'B7\tab}Usability testing\par
{\pntext\f3\'B7\tab}Compatibility testing\par

\pard\sa200\sl276\slmult1\par
Que20= What is GUI Testing?\par
Ans20= GUI Testing: \b0 GUI Testing is a software testing type that checks the Graphical User Interface of the Software. The purpose of Graphical User Interface (GUI) Testing is to ensure the functionalities of software application work as per specifications by checking screens and controls like menus, buttons, icons, etc.\par
\b\par
Que21= What is Input Domain Testing? What are the techniques will be used in IDT?\par
Ans21= Input Domain Testing: \b0 Input domain testing uses a minimum number of inputs to check the output of a system. The purpose of this process is to prove that the tested system will accept only certain inputs that lie within the acceptable range. The system is expected to deliver the required outputs only and block any invalid input values. \par
\b The techniques used in IDT are:\par
Boundary testing: \f2  \b0 Boundary value analysis (BVA) is based on testing at the boundaries between partitions. We will be testing both the valid and invalid input values in the partition/classes.\b\par
Equivalence Class testing\f1\lang16393 : \b0\f2\lang9 The idea behind this technique is to divide (i.e. to partition) a set of test conditions into groups or sets that can be considered the same (i.e. the system should handle them equivalently), hence \lquote equivalence partitioning.\par
\f1\par
\b Que22= What is database Testing?\par
Ans22= Database tesing: \b0 Database Testing is a type of software testing that checks the schema, tables, triggers, etc. of the Database under test. It also checks data integrity and consistency. It may involve creating complex queries to load/stress test the Database and check its responsiveness.\par
Database Testing is important in software testing because it ensures data values and information received and stored into database are valid or not. Database testing helps to save data loss.\par
\b\par
}
 