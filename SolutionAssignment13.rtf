{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fswiss\fcharset0 Calibri;}{\f1\fnil\fcharset0 Calibri;}{\f2\fnil Calibri;}{\f3\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\nowidctlpar\sa200\sl276\slmult1\f0\fs22\lang9 ============================\b\fs36 Assignment13\b0\fs22 ===============================\fs24\lang1033\par
\b\fs22\lang9\tab\tab\tab\tab\tab\tab Submitted By \fs36 TANUJA SHARMA\b0\fs24\lang1033\par
\fs22\lang9 ==============================================================================\fs24\lang1033\par

\pard\sa200\sl276\slmult1\b\f1\fs22\lang9 1) What do you understand by the term Boundary Value Analysis?\par
Ans1= Boundry Value Analysis: \b0 Boundary Value Analysis is used to check the behavior of application using test data that exist at boundary values or in more easy words, for a range of input data values, boundary values (extreme end values) are used as input for testing. It is mostly used design technique as it is believed that software is most likely to fail at upper and lower limits of input data values.\par
It's also known as Enhanced Equivalence partitioning.\b\par
Valid value: \b0 Test values at which the system does not fail and function properly as per user requirement.\b\par
Invalid Values: \b0 test values that do not meet the system requirement.\par
\par
\b 2) How does Boundary Value Analysis differ from Equivalence Partitioning?\par
Ans2= Boundary value Analysis:\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 It is a technique where we identify the errors at the boundaries of input data to discover those errors in the input center.\par
{\pntext\f3\'B7\tab}Boundary values are those that contain the upper and lower limit of a variable.\par
{\pntext\f3\'B7\tab}Boundary value analysis is testing the boundaries between partitions.\par
{\pntext\f3\'B7\tab}It will help decrease testing time due to a lesser number of test cases from infinite to finite.\b\par

\pard\sa200\sl276\slmult1 Equivalence partitioning:\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 It is a technique where the input data is divided into partitions of valid and invalid values.\par
{\pntext\f3\'B7\tab}In this, the inputs to the software or the application are separated into groups expected to show similar behavior.\par
{\pntext\f3\'B7\tab}It allows us to divide a set of test conditions into a partition that should be considered the same.\par
{\pntext\f3\'B7\tab}The Equivalence partitioning will reduce the number of test cases to a finite list of testable test cases covering maximum possibilities.\b\par

\pard\sa200\sl276\slmult1\par

\pard\sa200\sl276\slmult1 3) How can you use Boundary Value Analysis to test a program that accepts employee ID as an input?\par
Ans3= \b0 We can use Boundary Value Analysis to test a program that accepts employee ID as an input by testing the program with both valid and invalid employee IDs. A valid employee ID would be within the range of IDs that the program is expecting, while an invalid employee ID would be outside of that range. This can help to ensure that the program is able to correctly handle both valid and invalid input.\b\par
4) Why do you think it\rquote s important to have multiple test cases for testing boundaries?\par
Ans4=\b0  it\rquote s important to have multiple test cases for testing boundaries because Finding defects using Boundary value analysis test design technique is very effective and it can be used at all test levels. we can select multiple test cases from valid and invalid input domains based on our needs or previous experience but remember wou do have to select at least one test case from each input domain.\b\par
5) How to apply the Error guessing technique?\par
Ans5=  Steps to apply error guessing technique:\par

\pard 
{\pntext\f1 1.\tab}{\*\pn\pnlvlbody\pnf1\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1\b0 The implementation of this technique depends on the experience of the tester or analyst having prior experience with similar applications. \par
{\pntext\f1 2.\tab}It requires only well-experienced testers with quick error guessing technique. \par
{\pntext\f1 3.\tab}This technique is used to find errors that may not be easily captured by formal black box testing techniques, and that is the reason, it is done after all formal techniques.\par
{\pntext\f1 4.\tab}Test cases are prepared by the analyst to identify conditions. The conditions are prepared by identifying most error probable areas and then test cases are designed for them.\b\par

\pard\sa200\sl276\slmult1\par

\pard\sa200\sl276\slmult1 6) What are the Pitfalls of error guessing technique?\par
Ans5= The Pitfalls of error guessing technique are:\par

\pard 
{\pntext\f1 1.\tab}{\*\pn\pnlvlbody\pnf1\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1\b0 The focal shortcoming of this technique is that it is person dependent and thus the experience of the tester controls the quality of test cases.\par
{\pntext\f1 2.\tab}It also cannot guarantee that the software has reached the expected quality benchmark.\par
{\pntext\f1 3.\tab}Only experienced testers can perform this testing. we can\rquote t get it done by freshers.\par

\pard\sa200\sl276\slmult1\b\par

\pard\sa200\sl276\slmult1 7) What is Test Data?\par
Ans7= Test Data: \b0 Test Data is the input given to a software program during test execution. It represents data that affects or affected by software execution while testing. \par
Test data is used for both positive testing to verify that functions produce expected results for given inputs and for negative testing to test software ability to handle unusual, exceptional or unexpected inputs.\par
\b\par
8) What is the use of the cause and effect diagram?\par
Ans8= Uses of Cause and Effect Diagram are:\par

\pard 
{\pntext\f1 1.\tab}{\*\pn\pnlvlbody\pnf1\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1\b0 It Helps us to determine the root causes of a problem or quality using a structured approach.\par
{\pntext\f1 2.\tab}It Uses an orderly, easy-to-read format to diagram cause-and-effect relationships.\par
{\pntext\f1 3.\tab}It Indicates possible causes of variation in a process.\par
{\pntext\f1 4.\tab}It Identifies areas, where data should be collected for further study.\par

\pard\sa200\sl276\slmult1\par

\pard\sa200\sl276\slmult1\b 9) What is decision table testing when should we use it? Write down the guidelines to create Good Decision Tables.\par
Ans9= Decision Table testing: \b0 Decision Table Testing is a Black Box test design technique (behavioral or behavior-based technique), used where different combinations of test input conditions result in different outcomes.\par
The output may be dependent on many input conditions and decision tables give a tabular view of various combinations of input conditions and these conditions are in the form of True(T) and False(F).\par
When a system has complex business rules, then the decision table testing is used to identifying the correct test cases.\par
\b Guidelines to create Good Decision Tables:\par

\pard 
{\pntext\f2 1.\tab}{\*\pn\pnlvlbody\pnf2\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1\b0\f2 Analyze the requirement and create the first column\par
{\pntext\f2 2.\tab}\f1 Add Columns, Calculate how many columns are needed in the table. The number of columns depends on the number of conditions and the number of alternatives for each condition.\par
{\pntext\f2 3.\tab}Reduce the table, Mark insignificant values with \ldblquote -\ldblquote  \par
{\pntext\f2 4.\tab}Determine actions, enter actions for each column in the table.\par
{\pntext\f2 5.\tab}Write test cases based on the table. At least one test case per column gives full coverage of all business rules.\par

\pard\sa200\sl276\slmult1\b\par
10) Explain random/monkey testing?\par
Ans10= Random/monkey Testing: \b0 Monkey Testing is the technique in which the tester enters any random inputs into the software application without predefined test cases and checks the behavior of the software application, whether it crashes or not. The purpose of Monkey testing is to find the bugs and errors in the software application using experimental techniques.\b\par
\par
11) What is negative and positive testing?\par
Ans11= Negative testing:  \b0 Negative testing is used to check the system for unexpected conditions. Negative testing plays a much important role in high-performance software development. It checks whether on such unexpected conditions what will be the behavior of the software.\b\par
Positive testing: \b0 Positive testing is a testing that is performed by assuming everything will be as expected. It is performed with the assumption that only valid and relevant things will occur. data set and all other functionalities will be as expected.\par
\b\par
12) What are the advantages of using Boundary Value Analysis over Equivalence Partitioning?\par
Ans12=  Advantages of BVA over Equivalence partitioning are:\par

\pard{\pntext\f3\'B7\tab}{\*\pn\pnlvlblt\pnf3\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 Boundary Value Analysis is better than Equivalence Partitioning as it considers both positive and negative values along with maximum and minimum value. \par
{\pntext\f3\'B7\tab}So, when compared with Equivalence Partitioning, Boundary Value Analysis proves to be a better choice in assuring the quality. \par
{\pntext\f3\'B7\tab}BVA test all the boundry conditions which is miss out in equivalence partitioning.\par
{\pntext\f3\'B7\tab}Errors will be at boundry value is easy So we have to do Boundry value Analysis.\par

\pard\sa200\sl276\slmult1\b\par
13) What are the main steps involved in performing Boundary Value Analysis?\par
Ans13= The main steps involved in Boundry value analysis are: \par

\pard 
{\pntext\f1 1.\tab}{\*\pn\pnlvlbody\pnf1\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1\b0 Identify the equivalence classes.\par
{\pntext\f1 2.\tab}Identify the boundaries of each class.\par
{\pntext\f1 3.\tab}Create test cases for each boundary.\par
{\pntext\f1 4.\tab}One point below the boundary.\par
{\pntext\f1 5.\tab}One point at the boundary.\par
{\pntext\f1 6.\tab} One point above the boundary.\par

\pard\sa200\sl276\slmult1\b\par

\pard\sa200\sl276\slmult1 14) Write down the disadvantages of decision table.\par
Ans14= Disadvantages of Decision tables are:\par
\b0 1. Decision tables only present a partial solution.\par
2. Do not depict the flow of logic of a solution.\par
3. Decision tables are quite far away from high-level languages.\par
\b\par
15) What is Test Data Generation? Why test data should be created before test execution?\par
Ans15= Test Data Generation: \b0 Test Data  Generation is the process of collecting and managing a large amount of data from various resources just to implement the test cases to ensure the functional soundness of the system under testing. These generated datasets act as the input for the test-cases so that the behavior of the system can be checked. \b\par
\b0 Test data should be created before test cases execution to save time and meet deadline. It is a good practice to use some automation tool to create huge amount of test data as manual effort in creating such data would be more and also it will be time consuming.\par
\b\par
16) What is the difference between the STLC (Software Testing Life Cycle) and SDLC (Software Development Life Cycle)?\par
Ans16= The diffrence b/w STLC & SDLc are:\par
STLC (Software Testing Life Cycle) :\par
\b0 1. STLC is related to software testing.\par
2. It focuses only on testing the software.\par
3. In STLC, testing team(Test Lead or Test Architect) makes the plans and designs.\par
4. It helps in making the software defects free.\par
5. STLC phases are performed after SDLC phases.\par
6. A tested software system is the end result of STLC.\b\par
\par
SDLC (Software Development Life Cycle):\par
\b0 1. SDLC is related to software development.\par
2. Besides development other phases like testing is also included.\par
3. In SDLC, development team makes the plans and designs based on the requirements.\par
4. It helps in developing good quality software.\par
5. SDLC phases are completed before the STLC phases.\par
6.\b  \b0 Creation of reusable software systems is the end result of SDLC.\b\par
\par
\par
\par
}
 